{"ast":null,"code":"import _defineProperty from \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/befort/Desktop/uofa/Homework/clickgame/my-app/src/components/Form.js\";\nimport React, { Component } from \"react\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      // Getting the value and name of the input which triggered the change\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // Updating the input's state\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      // Preventing the default behavior of the form submit (which is to refresh the page)\n      event.preventDefault(); // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n\n      alert(\"Username:  \".concat(_this.state.username, \"\\nPassword: \").concat(_this.state.password));\n\n      _this.setState({\n        username: \"\",\n        password: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Username: \", this.state.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Password: \", this.state.password), React.createElement(\"input\", {\n        value: this.state.username,\n        name: \"username\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        value: this.state.password,\n        name: \"password\",\n        onChange: this.handleInputChange,\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/befort/Desktop/uofa/Homework/clickgame/my-app/src/components/Form.js"],"names":["React","Component","Form","state","username","password","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","alert"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,I;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAMRC,iB,GAAoB,UAAAC,KAAK,EAAI;AAC3B;AAD2B,0BAEHA,KAAK,CAACC,MAFH;AAAA,UAEnBC,IAFmB,iBAEnBA,IAFmB;AAAA,UAEbC,KAFa,iBAEbA,KAFa,EAI3B;;AACA,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAGD,K;;UAEDE,gB,GAAmB,UAAAL,KAAK,EAAI;AAC1B;AACAA,MAAAA,KAAK,CAACM,cAAN,GAF0B,CAI1B;;AACAC,MAAAA,KAAK,sBAAe,MAAKX,KAAL,CAAWC,QAA1B,yBAAiD,MAAKD,KAAL,CAAWE,QAA5D,EAAL;;AACA,YAAKM,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKF,KAAL,CAAWC,QAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKD,KAAL,CAAWE,QAAzB,CAFF,EAGE;AACE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,QADpB;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKE,iBAHjB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAUE;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QADpB;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKC,iBAHjB;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAiBI;AAAQ,QAAA,OAAO,EAAE,KAAKM,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,CADF;AAqBD;;;;EApDgBX,S;;AAuDnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Form extends Component {\n  // Setting the initial values of this.state.username and this.state.password\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n\n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    const { name, value } = event.target;\n\n    // Updating the input's state\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n\n    // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n    alert(`Username:  ${this.state.username}\\nPassword: ${this.state.password}`);\n    this.setState({\n      username: \"\",\n      password: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <form>\n        <p>Username: {this.state.username}</p>\n        <p>Password: {this.state.password}</p>\n        <input\n          value={this.state.username}\n          name=\"username\"\n          onChange={this.handleInputChange}\n          type=\"text\"\n          placeholder=\"Username\"\n        />\n        <input\n          value={this.state.password}\n          name=\"password\"\n          onChange={this.handleInputChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n          <button onClick={this.handleFormSubmit}>Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}